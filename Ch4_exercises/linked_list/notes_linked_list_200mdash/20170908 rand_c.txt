2017/09/08 FRIDAY

whew, that was too complicated.  I should make a note to ask Jim about git pull vs git fetch and whatever merge step needs to happen afterwards.  

ok, now where was i on actual real work (and not random meanderings)?  do I want to work on server stuff with Jim?  that would be a great way to fill time and do something different and leverege Jim's help and knowledge and insight.  but i'm sort of kind of working on some existing stuff right now and do i want to lose track of my progress on those projects / lines of thought? also, maybe i'm just a little bit peeved that jim springs this up on me seemingly out of nowhere, even though i've been kind of asking him for a while and he's historically been unresponsive.  but i know that's not necessarily productive because jim's been distracted and i've been distracted and communication is nebulous and Jim's volunteering himself to be just freaking awesome and I shouldn't shirk at that....

i guess for now i'll keep on with rand() and digital notetaking, and maybe i'll see how i feel after Jim's done with shower and whatever else he's busingying himself with, and we'll just go from there.  it would be super great to bill a little extra time this cycle: i'm short and it would be so rad to build up some time!!!  but i guess i also don't want to be caught off guard and all that.... plus maybe i've got stuff i'd like to do this evening?? i don't know??

===	===	===

how to fit coin toss into linked_list.cpp and linked_list.h??  

perhaps i could get the ball rolling by writing a simple coin toss function?

===	===	===

ok, what would i do to make more progress on 200 m dash linked_list.cpp? I would like to integrate coin toss into my existing code, and to make my setup more like a properly working game, rather than some jank smatterings of code. but I can't do that all at once -- I need some proper steps to be implemented in the proper order before I can set all that up...

ok, so I've got my linked list of players (which maybe i should fit into a separate function just so that main is a little cleaner looking). then i'd want to print out reports and instructions onto the terminal for the user to see. then i'd want to ask the user to select which player to play. then i'd want to take that selection to inititate the race and to find a winner based on a random coin toss (and to print relevant reports and outcomes onto the screen).  and then i'd want the linked list to get updated (if needed) with the new ranking order, based on the results of the most recent race. and then, of course, to loop the code around so that the user could pick another player to run a challenge race and to start the whole loop over again. 

So that, I think, is the bare minimum.  And all of that is a hefty amount of work -- at the very least, I can't simply flip a switch right now and get it all to work right away. and i'm happy to begin chipping away at it, but i also don't want to leave it in a place where i'd leave a huge mess if i ended it today and maybe if i didn't get back to it in a while...  

Hmm, hoo -- I guess before I can even flip a coin i'd need to alter the struct so that I've got rankings instead of time_sec. I would like to re-implement time_sec, but to crank out my bare-minimum proof of concept I definitely don't need it.  hopefully that doesn't mess up my qsort -- i don't think it will, but i'll need to check on it to make sure.


